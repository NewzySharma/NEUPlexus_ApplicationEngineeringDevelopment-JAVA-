/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.QnAPortal;
import business.dataoperations.DataProcessor;
import business.dataoperations.DataStore;
import business.enterprise.Enterprise;
import business.network.Network;
import business.qnaPortal.Question;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import neuplexus.NEUPlexus;
import org.apache.log4j.Logger;
import userInterface.authentication.UserLogin;
import userInterface.homeSceen.NeuPlexusHome;
/**
 *
 * @author Shardul Pathak
 */
public class AskAQuestion extends javax.swing.JPanel {
final static Logger logger = Logger.getLogger(AskAQuestion.class.getName());
private JPanel panelRight;
private DataStore datastore;
private NEUPlexus system;
  //  final static Logger logger = Logger.getLogger(AskAQuestion.class);

    /**
     * Creates new form AskAQuestion
     */
    public AskAQuestion(JPanel panelRight,DataStore datastore) {
        initComponents();
        this.panelRight=panelRight;
        initCombobox();
        this.datastore=datastore;
        this.system = UserLogin.system;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        qstnCategoryDropDown = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        QstnText = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        intendedcombobox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Charter", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Post Your Question Here");

        jLabel4.setFont(new java.awt.Font("Charter", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Question Category");

        qstnCategoryDropDown.setFont(new java.awt.Font("Charter", 0, 16)); // NOI18N
        qstnCategoryDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Housing", "Coursework", "Coop", "Commute", "Others" }));
        qstnCategoryDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qstnCategoryDropDownActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Charter", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Question");

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/left_arrow.png"))); // NOI18N
        backBtn.setText("BACK");
        backBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        submitBtn.setBackground(new java.awt.Color(0, 0, 0));
        submitBtn.setFont(new java.awt.Font("Charter", 1, 14)); // NOI18N
        submitBtn.setForeground(new java.awt.Color(255, 255, 255));
        submitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/right.png"))); // NOI18N
        submitBtn.setText("SUBMIT");
        submitBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        submitBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        QstnText.setColumns(20);
        QstnText.setRows(5);
        jScrollPane1.setViewportView(QstnText);

        jLabel3.setFont(new java.awt.Font("Charter", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Intended for");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(697, 697, 697)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(648, 648, 648)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(614, 614, 614)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(97, 97, 97)
                            .addComponent(intendedcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(49, 49, 49)
                            .addComponent(qstnCategoryDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(78, 78, 78)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(248, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jLabel1)
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qstnCategoryDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intendedcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(submitBtn)
                    .addComponent(backBtn))
                .addContainerGap(682, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void qstnCategoryDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qstnCategoryDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qstnCategoryDropDownActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        panelRight.remove(this);
        CardLayout layout = (CardLayout) panelRight.getLayout();
        layout.previous(panelRight);
                                       
    }//GEN-LAST:event_backBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
      try{
         Question question = getQuestion();
       String selectednetwork = intendedcombobox.getSelectedItem().toString();
      boolean postToAll =false;
        if(selectednetwork.equalsIgnoreCase("all")){
              postToAll=true;
          }
        for(Network n:system.getNetworkList()){
           for(Enterprise e:n.getEnterpriseDirectory().getEnterpriseList()){
                  if(e.getEnterpriseType().equals(Enterprise.EnterpriseType.QnAPortal)){
                      if(postToAll){
                      e.getDatastore().quesdir.getQuestionList().add(question);
                      }
                      else if(n.getName().equalsIgnoreCase(selectednetwork)){
                      e.getDatastore().quesdir.getQuestionList().add(question);
                      }
                  }
              }
      }
   //  datastore.getQuesdir().getQuestionList().add(question);
        logger.debug("User "+NeuPlexusHome.useraccount.getUserName()+" posted a question on QnA Portal");
       JOptionPane.showMessageDialog(null, "Question added!","SUCCESS",JOptionPane.INFORMATION_MESSAGE);
       QstnText.setText("");
      }catch(Exception e){
          logger.error("Exception in adding question to pool "+e.getMessage());
      }
    }//GEN-LAST:event_submitBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea QstnText;
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> intendedcombobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox qstnCategoryDropDown;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables

    private void initCombobox() {
        String role= NeuPlexusHome.useraccount.getRole().toString();
        NEUPlexus system = UserLogin.system;
        intendedcombobox.removeAllItems();
        for(Network n:system.getNetworkList()){
            intendedcombobox.addItem(n.getName());
        }
        intendedcombobox.addItem("all");
    }

    private Question getQuestion() {
        try{
      Question question = new Question();
      question.setQuestionText(QstnText.getText());
      question.setQuestionType(qstnCategoryDropDown.getSelectedItem().toString());
      question.setIntendedFor(intendedcombobox.getSelectedItem().toString());
      question.setAskedBy(NeuPlexusHome.useraccount.getLastName()+", "+NeuPlexusHome.useraccount.getFirstName());
      question.setAskedByEmailId(NeuPlexusHome.useraccount.getUserName());
     Date date = Calendar.getInstance().getTime();  
    DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy HH:mm");  
    question.setDatePosted(dateFormat.format(date));
      return question;
        }catch(Exception e){
            logger.error("Error while creating question object "+e.getMessage());
            return null;
        }
    }
}
