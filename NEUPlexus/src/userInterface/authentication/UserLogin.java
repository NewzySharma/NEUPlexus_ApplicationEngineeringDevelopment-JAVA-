/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.authentication;

import business.dataoperations.DataStore;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.UserOrganization;
import business.userAccount.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import neuplexus.NEUPlexus;
import org.apache.log4j.Logger;
import userInterface.adminuser.AdminWorkAreaJPanel;
import userInterface.adminuser.SelectEnterpriseJPanel;
import userInterface.carPool.BookCarWorkArea;
import userInterface.homeSceen.NeuPlexusHome;
import userInterface.homeSceen.ViewProfilePanel;
import userInterface.management.ManagementWorkArea;
import userInterface.sysadmin.ManageNetworkJPanel;
import userInterface.sysadmin.SystemAdminWorkAreaJPanel;
import utils.DB4Outil;

/**
 *
 * @author Shardul Pathak
 */
public class UserLogin extends javax.swing.JPanel {

    private JPanel panelRight;
    
    public static NEUPlexus system;
    private DB4Outil dB4OUtil = DB4Outil.getInstance();
    public static NeuPlexusHome homeObject;
    final static Logger logger = Logger.getLogger(UserLogin.class.getName());
    /**
     * Creates new form UserLogin
     */
    public UserLogin(JPanel panelRight,NeuPlexusHome homeObject,boolean retriveSystem) {
        initComponents();
        this.panelRight=panelRight;
       // this.datastore =datastore;
        if(retriveSystem)
        system = dB4OUtil.retrieveSystem();
        this.homeObject=homeObject;
                

    }
    
    public static void storeSystem(){
       DB4Outil.getInstance().storeSystem(system);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userEmailText = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        userPasswordText = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Charter", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("User Name");

        jLabel2.setFont(new java.awt.Font("Charter", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Password");

        userEmailText.setFont(new java.awt.Font("Charter", 0, 16)); // NOI18N
        userEmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userEmailTextActionPerformed(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(0, 0, 0));
        btnLogin.setFont(new java.awt.Font("Charter", 1, 16)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tick.png"))); // NOI18N
        btnLogin.setText("LOGIN");
        btnLogin.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Charter", 1, 16)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/left_arrow.png"))); // NOI18N
        btnBack.setText("CLEAR");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        userPasswordText.setFont(new java.awt.Font("Charter", 0, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Charter", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("LOGIN NEU PLEXUS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(653, 653, 653)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(718, 718, 718)
                        .addComponent(btnBack)
                        .addGap(32, 32, 32)
                        .addComponent(btnLogin))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(724, 724, 724)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnBack))
                .addContainerGap(894, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userEmailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userEmailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userEmailTextActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
             
        String username = userEmailText.getText();
        String password = new String(userPasswordText.getPassword());
        User userAccount = system.getUserAccountDirectory().authenticate(username, password);
        
        Enterprise inEnterprise=null;
        UserOrganization inOrganization=null;
        Network n =null;
        //this is system admin so redirect to sysadmin portal
        if(userAccount!=null && userAccount.getUserName().equalsIgnoreCase("admin")){
        logger.info("User "+userAccount.getUserName()+" logged in");
        homeObject.useraccount=userAccount;
        homeObject.disableEntButtons();
        homeObject.afterLogin();
        SystemAdminWorkAreaJPanel sysAdminWorkArea=new SystemAdminWorkAreaJPanel(panelRight, system);
        panelRight.add("sysAdminWorkArea",sysAdminWorkArea);
        CardLayout layout=(CardLayout)panelRight.getLayout();
        layout.next(panelRight);
        }
        else if(userAccount==null){
            //check inside system
            for(Network network:system.getNetworkList()){
                for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
                    userAccount=enterprise.getEntUserDirectory().authenticate(username, password);//our enterprise admins and users are here
                    if(userAccount==null){
                       //check against each organization for each enterprise / not doing this bcz our all students are same
                   /*    for(UserOrganization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                           userAccount=organization.getUserAccountDirectory().authenticate(username, password);
                           if(userAccount!=null){
                               inEnterprise=enterprise;
                               inOrganization=organization;
                               break;
                           }
                       }*/
                    }
                    else{
                       logger.info("User "+userAccount.getUserName()+" logged in");
                       inEnterprise=enterprise;
                       n=network;
                       userAccount.setNetwork(n.getName());
                       NeuPlexusHome.useraccount=userAccount;
                       break;
                    }
                    if(inOrganization!=null){
                        break;
                    }  
                }
                if(inEnterprise!=null){
                    break;
                }
            }
        }
        if(userAccount==null){
            JOptionPane.showMessageDialog(null, "The Username or Password is Incorrect!","ERROR",JOptionPane.ERROR_MESSAGE);
            logger.error("Error in username or password for user "+userEmailText.getText());
            return;
        }
        else if(userAccount!=null && userAccount.getRole().toString().equalsIgnoreCase("AdminRole")){
             homeObject.afterLogin();
             homeObject.disableEntButtons();
            AdminWorkAreaJPanel adminWorkArea=new AdminWorkAreaJPanel(panelRight, inEnterprise);
        panelRight.add("sysAdminWorkArea",adminWorkArea);
        CardLayout layout=(CardLayout)panelRight.getLayout();
        layout.next(panelRight);
        }
        else if(userAccount!=null && !userAccount.getRole().toString().equalsIgnoreCase("AdminRole") && !userAccount.getRole().toString().equalsIgnoreCase("SystemAdminRole")){
           if(userAccount.getRole().toString().equalsIgnoreCase("ManagerRole")){
               homeObject.disableEntButtons();
               homeObject.afterLogin();
                ManagementWorkArea mgmtWorkArea=new ManagementWorkArea(panelRight,inEnterprise,n);
                panelRight.add("mgmtWorkArea",mgmtWorkArea);
                CardLayout layout=(CardLayout)panelRight.getLayout();
                layout.next(panelRight);
           }
           else{
               
           NeuPlexusHome.useraccount=userAccount;
           NeuPlexusHome.inEnterprise=inEnterprise;
           NeuPlexusHome.inOrganization=inOrganization;
           NeuPlexusHome.system=system;
           //disable login button from left panel after login 
           homeObject.afterLogin();
           CardLayout layout=(CardLayout)panelRight.getLayout();
           panelRight.add("viewProfilePanel",new ViewProfilePanel( panelRight,homeObject));
           layout.next(panelRight);
           }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
       userEmailText.setText("");
       userPasswordText.setText("");
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField userEmailText;
    private javax.swing.JPasswordField userPasswordText;
    // End of variables declaration//GEN-END:variables
}
